(()=>{var e={12:()=>{AFRAME.registerComponent("polygon-wireframe",{schema:{color:{type:"color",default:"grey"},dashed:{type:"boolean",default:!1},dashSize:{type:"number",default:3},gapSize:{type:"number",default:1},dashScale:{type:"number",default:30},onTop:{type:"boolean",default:!1}},init(){const e=this.el.getObject3D("mesh").geometry;e||console.warn("polygon-wireframe: no base geometry found"),this.edges=new THREE.EdgesGeometry(e)},update(){const e=this.material,t=this.line;if(this.data.dashed?this.material=new THREE.LineDashedMaterial({color:this.data.color,dashSize:this.data.dashSize,gapSize:this.data.gapSize,scale:this.data.dashScale}):this.material=new THREE.LineBasicMaterial({color:this.data.color}),this.data.onTop){const e=this.material;e.depthWrite=!1,e.depthTest=!1,e.toneMapped=!1,e.transparent=!0}this.line=new THREE.LineSegments(this.edges,this.material),this.line.computeLineDistances(),this.el.object3D.add(this.line),this.el.getObject3D("mesh").visible=!1,e&&e.dispose(),t&&t.removeFromParent()}})}},t={};function s(i){var n=t[i];if(void 0!==n)return n.exports;var o=t[i]={exports:{}};return e[i](o,o.exports,s),o.exports}AFRAME.components["polygon-wireframe"]||s(12),AFRAME.registerSystem("socket",{schema:{snapDistance:{default:.1},snapRotation:{default:30},rotationIncrement:{default:90},debug:{default:!1}},init(){this.freeSocketObjects=[],this.freePlugObjects=[],this.freeSocketsSortedByX=[],this.freeSocketsSortedByY=[],this.freeSocketsSortedByZ=[],this.upVector=new THREE.Vector3(0,1,0),this.identityQuaternion=new THREE.Quaternion,this.bestQuaternion=new THREE.Quaternion,this.testPlug=new THREE.Object3D},update(){this.snapRotation=THREE.MathUtils.degToRad(this.data.snapRotation),this.angleIncrementQuaternion=new THREE.Quaternion,this.angleIncrementQuaternion.setFromAxisAngle(this.upVector,THREE.MathUtils.degToRad(this.data.rotationIncrement))},addFreePlug(e){this.freePlugObjects.push(e)},removeFreePlug(e){const t=this.freePlugObjects.indexOf(e);t>-1&&this.freePlugObjects.splice(t,1)},addFreeSocket(e){this.freeSocketObjects.push(e)},removeFreeSocket(e){const t=this.freeSocketObjects.indexOf(e);t>-1&&this.freeSocketObjects.splice(t,1)},prepareSocketsForSearch(){this.freeSocketsSortedByX=[...this.freeSocketObjects].sort(((e,t)=>e.position.x-t.position.x)),this.freeSocketsSortedByY=[...this.freeSocketObjects].sort(((e,t)=>e.position.y-t.position.y)),this.freeSocketsSortedByZ=[...this.freeSocketObjects].sort(((e,t)=>e.position.z-t.position.z))},findNearbySockets(e){const t=this.data.snapDistance,s=e.position,i=this.findCandidates(this.freeSocketsSortedByX,"x",s.x,t),n=this.findCandidates(this.freeSocketsSortedByY,"y",s.y,t),o=this.findCandidates(this.freeSocketsSortedByZ,"z",s.z,t),r=(e,t)=>e.filter((e=>t.find((t=>e===t)))),a=r(i,n),c=r(a,o),h=t*t;return c.filter((e=>!(e.position.distanceToSquared(s)>=h)))},findCandidates(e,t,s,i){if(0===e.length)return e;const n=this.findInArraySegment(e,t,s-i,0,e.length-1,!0),o=this.findInArraySegment(e,t,s+i,0,e.length-1,!1);return e.slice(n,o+1)},findInArraySegment(e,t,s,i,n,o){if(i===n||i>n)return e[i].position[t]>s&&o?i-1:i;const r=Math.floor((i+n)/2),a=e[r].position[t];return a>s||a===s&&o?this.findInArraySegment(e,t,s,i,r-1):this.findInArraySegment(e,t,s,r+1,n)},tick(){this.prepareSocketsForSearch();const e=this.freePlugObjects,t=e.length;for(let s=0;s<t;s++){const t=e[s],i=t.el.components.socket;adjustmentTransform=i.adjustmentTransform;const n=this.matchPlugToSocket(t,adjustmentTransform);if(n){const e=n.el.components.socket;this.data.debug&&(console.log("Matched plug: ",s,t.uuid,"to socket",n.uuid),console.log("Plug WP:",i.worldSpaceObject.position),console.log("Plug WQ:",i.worldSpaceObject.quaternion),console.log("Socket WP:",e.worldSpaceObject.position),console.log("Socket WQ:",e.worldSpaceObject.quaternion),console.log("Adjustment Transform P:",adjustmentTransform.position),console.log("Adjustment Transform Q:",adjustmentTransform.quaternion));const o=e.getInertia();i.getInertia()<=o?i.suggestPeer(n):(e.adjustmentTransform.position.copy(adjustmentTransform.position).multiplyScalar(-1),e.adjustmentTransform.quaternion.copy(adjustmentTransform.quaternion).invert(),e.suggestPeer(t))}else i.cancelPeer()}},matchPlugToSocket(e,t){let s=null,i=1/0;const n=this.findNearbySockets(e);if(!(n.length<1))return n.forEach((n=>{this.testPlug.matrix.identity(),this.testPlug.matrix.decompose(this.testPlug.position,this.testPlug.quaternion,this.testPlug.scale),n.add(this.testPlug),e.attach(this.testPlug);let o=1/0;for(let e=0;e<360;e+=this.data.rotationIncrement){const e=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),t=this.testPlug.quaternion.angleTo(this.identityQuaternion),s=Math.abs(e(t));s<o&&(o=s,this.bestQuaternion.copy(this.testPlug.quaternion)),this.testPlug.quaternion.multiply(this.angleIncrementQuaternion)}if(o<this.snapRotation){const o=this.testPlug.position.lengthSq();o<i&&(i=o,s=n,t.position.subVectors(n.position,e.position),t.quaternion.copy(this.bestQuaternion),console.log("adjustmentTransform position: ",t.position),console.log("adjustmentTransform quaternion: ",t.quaternion))}})),s}}),AFRAME.registerComponent("socket",{schema:{type:{type:"string",default:"socket",oneOf:["socket","plug"]}},init(){this.bindingState=0,this.adjustmentTransform=new THREE.Object3D,this.fabricAdjustmentTransform=new THREE.Object3D,this.peer=null,this.isSocket="socket"===this.data.type,this.worldSpaceObject=new THREE.Object3D,this.worldSpaceObject.el=this.el,this.updateWorldSpaceObject(),this.addToSystem(),this.bindingFailed=this.bindingFailed.bind(this),this.bindingSuccess=this.bindingSuccess.bind(this),this.el.addEventListener("binding-failed",this.bindingFailed),this.el.addEventListener("binding-success",this.bindingSuccess),this.system.data.debug&&(this.debugVisual=document.createElement("a-cylinder"),this.updateDebugVisual(),this.el.appendChild(this.debugVisual)),this.debugDistanceVector=new THREE.Vector3},updateDebugVisual(){if(!this.debugVisual)return;let e,t;switch(this.bindingState){case 0:e="socket"===this.data.type?"#55f":"#f55";break;case 1:case 2:case 3:e="socket"===this.data.type?"#5ff":"#ff5";break;default:console.error("unexpected state",this.bindingState)}t="socket"===this.data.type?.1:.08;const s=360/this.system.data.rotationIncrement;this.debugVisual.setAttribute("radius",t),this.debugVisual.setAttribute("height",.05),this.debugVisual.setAttribute("segments-height",1),this.debugVisual.setAttribute("segments-radial",s),this.debugVisual.setAttribute("polygon-wireframe",{color:e,onTop:!0})},updateWorldSpaceObject(){const e=this.worldSpaceObject;e.matrix.identity(),e.matrix.decompose(e.position,e.quaternion,e.scale),this.el.object3D.add(e),this.el.sceneEl.object3D.attach(e)},addToSystem(){this.isSocket?this.system.addFreeSocket(this.worldSpaceObject):this.system.addFreePlug(this.worldSpaceObject)},removeFromSystem(){this.isSocket?this.system.removeFreeSocket(this.worldSpaceObject):this.system.removeFreePlug(this.worldSpaceObject)},getInertia(){const e=this.el.parentEl.components["dynamic-snap"];return e?.diverged?.1:1},suggestPeer(e){this.bindingState=1,this.peer=e,e.el.components.socket.trackPeer(this.el.object3D),this.el.emit("binding-request")},trackPeer(e){this.bindingState=3,this.peer=e},untrackPeer(e){this.bindingState=0,this.peer=null},cancelPeer(){this.peer&&(1===this.bindingState||2===this.bindingState?this.el.emit("binding-cancel"):3===this.bindingState&&this.peer.el.emit("binding-cancel"),this.peer.el.components.socket.untrackPeer(),this.untrackPeer()),this.bindingState=0},bindingFailed(){this.bindingState=3,this.cancelPeer()},bindingSuccess(){if(!this.peer)return;this.bindingState=2,this.removeFromSystem();const e=this.peer.el.components.socket;e.removeFromSystem(),this.system.data.debug&&(this.updateWorldSpaceObject(),e.updateWorldSpaceObject(),this.debugDistanceVector.subVectors(this.worldSpaceObject.position,this.peer.el.components.socket.worldSpaceObject.position),console.log("Binding Success: socket distance:",this.debugDistanceVector.length().toFixed(10)),Math.abs(this.debugDistanceVector.length())>.001&&(console.error("Inaccurate binding"),console.log("This position:",this.worldSpaceObject.position),console.log("Peer position:",this.peer.el.components.socket.worldSpaceObject.position)))},bindingBroken(){this.peer&&(this.addToSystem(),this.peer.el.components.socket.addToSystem(),this.cancelPeer())},tick(){this.updateWorldSpaceObject(),this.updateDebugVisual()}}),AFRAME.registerComponent("socket-fabric",{schema:{snap:{type:"string",oneOf:["auto","events"],default:"auto"}},init(){this.bindingRequest=this.bindingRequest.bind(this),this.el.addEventListener("binding-request",this.bindingRequest),this.bindingCancel=this.bindingCancel.bind(this),this.el.addEventListener("binding-cancel",this.bindingCancel),this.breakBonds=this.breakBonds.bind(this),this.el.addEventListener("mouseGrab",this.breakBonds),this.requests=[],this.prevRequestsLength=0,this.transform=new THREE.Object3D,this.eventData={worldTransform:this.transform}},bindingRequest(e){source=e.target,sourceNode=source.components.socket,target=sourceNode.peer,this.requests.includes(sourceNode)||this.requests.push(sourceNode)},bindingCancel(e){source=e.target,sourceNode=source.components.socket,this.disposeOfRequest(sourceNode,!1)},computeFabricAdjustmentTransforms(){const e=new THREE.Vector3,t=new THREE.Vector3,s=new THREE.Vector3,i=new THREE.Vector3;return function(){this.requests.forEach((n=>{const o=n.fabricAdjustmentTransform,r=n.adjustmentTransform;o.scale.set(1,1,1),o.quaternion.copy(r.quaternion),e.copy(n.el.object3D.position),n.el.object3D.parent.localToWorld(e),t.copy(this.el.object3D.position),this.el.object3D.parent.localToWorld(t),s.subVectors(e,t);const a=o.position;a.copy(r.position),i.copy(s),i.applyQuaternion(o.quaternion),a.sub(i),a.add(s)}))}()},buildConsensus(){const e=e=>this.requests.filter((t=>this.compareTransforms(e.fabricAdjustmentTransform,t.fabricAdjustmentTransform))).length,t=this.requests.map((t=>e(t))),s=Math.max(...t),i=t.indexOf(s),n=this.requests[i],o=this.requests.filter((e=>!this.compareTransforms(n.fabricAdjustmentTransform,e.fabricAdjustmentTransform)));o.forEach((e=>{this.disposeOfRequest(e,!0)})),this.requests.length||console.error("All requests disposed of:",o)},disposeOfRequest(e,t){t&&e.el.emit("binding-failed");const s=this.requests.indexOf(e);this.requests.splice(s,1)},compareTransforms(e,t,s=6){if(e===t)return!0;const i=(e,t)=>Math.abs(e-t)<Math.pow(10,-s),n=e.position,o=t.position;if(!i(n.x,o.x))return!1;if(!i(n.y,o.y))return!1;if(!i(n.z,o.z))return!1;const r=e.quaternion,a=t.quaternion;return!!(i(r.x,a.x)&&i(r.y,a.y)&&i(r.z,a.z)&&i(r.w,a.w))},tick(){this.requests.length?(this.computeFabricAdjustmentTransforms(),this.buildConsensus(),this.moveTowards(this.requests[0].fabricAdjustmentTransform)):this.prevRequestsLength&&this.el.emit("snapEnd"),this.prevRequestsLength=this.requests.length},moveTowards(e){if("auto"===this.data.snap){const t=this.el.sceneEl.object3D,s=this.el.object3D.parent;t.attach(this.el.object3D),this.el.object3D.position.add(e.position),this.el.object3D.quaternion.premultiply(e.quaternion),s.attach(this.el.object3D),this.requests.forEach((e=>{this.requestCompleted(e)}))}else{const t=this.transform;t.position.copy(this.el.object3D.position),t.quaternion.copy(this.el.object3D.quaternion),t.scale.copy(this.el.object3D.scale),this.el.object3D.parent.add(t),this.el.sceneEl.object3D.attach(t),t.quaternion.premultiply(e.quaternion),t.position.add(e.position),this.el.emit("snapStart",this.eventData),this.el.addEventListener("snapped-to-position",(()=>{this.requests.forEach((e=>{this.requestCompleted(e)}))}))}},requestCompleted(e){e.el.emit("binding-success"),this.disposeOfRequest(e,!1)},breakBonds(){this.el.querySelectorAll("[socket]").forEach((e=>{e.components.socket.bindingBroken()}))}}),AFRAME.registerComponent("plug",{init(){this.el.setAttribute("socket",{type:"plug"})}})})();