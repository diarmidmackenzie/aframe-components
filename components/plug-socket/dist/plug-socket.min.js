(()=>{var t={12:()=>{AFRAME.registerComponent("polygon-wireframe",{schema:{color:{type:"color",default:"grey"},dashed:{type:"boolean",default:!1},dashSize:{type:"number",default:3},gapSize:{type:"number",default:1},dashScale:{type:"number",default:30},onTop:{type:"boolean",default:!1}},init(){const t=this.el.getObject3D("mesh").geometry;t||console.warn("polygon-wireframe: no base geometry found"),this.edges=new THREE.EdgesGeometry(t)},update(){const t=this.material,e=this.line;if(this.data.dashed?this.material=new THREE.LineDashedMaterial({color:this.data.color,dashSize:this.data.dashSize,gapSize:this.data.gapSize,scale:this.data.dashScale}):this.material=new THREE.LineBasicMaterial({color:this.data.color}),this.data.onTop){const t=this.material;t.depthWrite=!1,t.depthTest=!1,t.toneMapped=!1,t.transparent=!0}this.line=new THREE.LineSegments(this.edges,this.material),this.line.computeLineDistances(),this.el.object3D.add(this.line),this.el.getObject3D("mesh").visible=!1,t&&t.dispose(),e&&e.removeFromParent()}})}},e={};function s(i){var n=e[i];if(void 0!==n)return n.exports;var o=e[i]={exports:{}};return t[i](o,o.exports,s),o.exports}AFRAME.components["polygon-wireframe"]||s(12),AFRAME.registerSystem("socket",{schema:{snapDistance:{default:.1},snapRotation:{default:30},rotationIncrement:{default:90},debug:{default:!1}},init(){this.freeSocketObjects=[],this.freePlugObjects=[],this.freeSocketsSortedByX=[],this.freeSocketsSortedByY=[],this.freeSocketsSortedByZ=[],this.upVector=new THREE.Vector3(0,1,0),this.identityQuaternion=new THREE.Quaternion,this.bestQuaternion=new THREE.Quaternion,this.testPlug=new THREE.Object3D},update(){this.snapRotation=THREE.MathUtils.degToRad(this.data.snapRotation),this.angleIncrementQuaternion=new THREE.Quaternion,this.angleIncrementQuaternion.setFromAxisAngle(this.upVector,THREE.MathUtils.degToRad(this.data.rotationIncrement))},addFreePlug(t){this.freePlugObjects.push(t)},removeFreePlug(t){const e=this.freePlugObjects.indexOf(t);e>-1&&this.freePlugObjects.splice(e,1)},addFreeSocket(t){this.freeSocketObjects.push(t)},removeFreeSocket(t){const e=this.freeSocketObjects.indexOf(t);e>-1&&this.freeSocketObjects.splice(e,1)},prepareSocketsForSearch(){this.freeSocketsSortedByX=[...this.freeSocketObjects].sort(((t,e)=>t.position.x-e.position.x)),this.freeSocketsSortedByY=[...this.freeSocketObjects].sort(((t,e)=>t.position.y-e.position.y)),this.freeSocketsSortedByZ=[...this.freeSocketObjects].sort(((t,e)=>t.position.z-e.position.z))},findNearbySockets(t){const e=this.data.snapDistance,s=t.position,i=this.findCandidates(this.freeSocketsSortedByX,"x",s.x,e),n=this.findCandidates(this.freeSocketsSortedByY,"y",s.y,e),o=this.findCandidates(this.freeSocketsSortedByZ,"z",s.z,e),r=(t,e)=>t.filter((t=>e.find((e=>t===e)))),a=r(i,n),c=r(a,o),d=e*e;return c.filter((t=>!(t.position.distanceToSquared(s)>=d)))},findCandidates(t,e,s,i){if(0===t.length)return t;const n=this.findInArraySegment(t,e,s-i,0,t.length-1,!0),o=this.findInArraySegment(t,e,s+i,0,t.length-1,!1);return t.slice(n,o+1)},findInArraySegment(t,e,s,i,n,o){if(i===n||i>n)return t[i].position[e]>s&&o?i-1:i;const r=Math.floor((i+n)/2),a=t[r].position[e];return a>s||a===s&&o?this.findInArraySegment(t,e,s,i,r-1):this.findInArraySegment(t,e,s,r+1,n)},tick(){this.prepareSocketsForSearch();const t=this.freePlugObjects,e=t.length;for(let s=0;s<e;s++){const e=t[s],i=e.el.components.socket;adjustmentTransform=i.adjustmentTransform;const n=this.matchPlugToSocket(e,adjustmentTransform);if(n){const t=n.el.components.socket;this.data.debug&&(console.log("Matched plug: ",s,e.uuid,"to socket",n.uuid),console.log("Plug WP:",i.worldSpaceObject.position),console.log("Plug WQ:",i.worldSpaceObject.quaternion),console.log("Socket WP:",t.worldSpaceObject.position),console.log("Socket WQ:",t.worldSpaceObject.quaternion),console.log("Adjustment Transform P:",adjustmentTransform.position),console.log("Adjustment Transform Q:",adjustmentTransform.quaternion));const o=t.getInertia();i.getInertia()<=o?i.suggestPeer(n):(t.adjustmentTransform.position.copy(adjustmentTransform.position).multiplyScalar(-1),t.adjustmentTransform.quaternion.copy(adjustmentTransform.quaternion).invert(),t.suggestPeer(e))}else i.cancelPeer()}},matchPlugToSocket(t,e){let s=null,i=1/0;const n=this.findNearbySockets(t);if(!(n.length<1))return n.forEach((n=>{this.testPlug.matrix.identity(),this.testPlug.matrix.decompose(this.testPlug.position,this.testPlug.quaternion,this.testPlug.scale),n.add(this.testPlug),t.attach(this.testPlug);let o=1/0;for(let t=0;t<360;t+=this.data.rotationIncrement){const t=t=>t-2*Math.PI*Math.floor((t+Math.PI)/(2*Math.PI)),e=this.testPlug.quaternion.angleTo(this.identityQuaternion),s=Math.abs(t(e));s<o&&(o=s,this.bestQuaternion.copy(this.testPlug.quaternion)),this.testPlug.quaternion.multiply(this.angleIncrementQuaternion)}if(o<this.snapRotation){const o=this.testPlug.position.lengthSq();o<i&&(i=o,s=n,e.position.subVectors(n.position,t.position),e.quaternion.copy(this.bestQuaternion),console.log("adjustmentTransform position: ",e.position),console.log("adjustmentTransform quaternion: ",e.quaternion))}})),s}}),AFRAME.registerComponent("socket",{schema:{type:{type:"string",default:"socket",oneOf:["socket","plug"]}},init(){this.bindingState=0,this.adjustmentTransform=new THREE.Object3D,this.fabricAdjustmentTransform=new THREE.Object3D,this.peer=null,this.isSocket="socket"===this.data.type,this.worldSpaceObject=new THREE.Object3D,this.worldSpaceObject.el=this.el,this.updateWorldSpaceObject(),this.addToSystem(),this.bindingFailed=this.bindingFailed.bind(this),this.bindingSuccess=this.bindingSuccess.bind(this),this.el.addEventListener("binding-failed",this.bindingFailed),this.el.addEventListener("binding-success",this.bindingSuccess),this.system.data.debug&&(this.debugVisual=document.createElement("a-cylinder"),this.updateDebugVisual(),this.el.appendChild(this.debugVisual)),this.debugDistanceVector=new THREE.Vector3},updateDebugVisual(){if(!this.debugVisual)return;let t,e;switch(this.bindingState){case 0:t="socket"===this.data.type?"#55f":"#f55";break;case 1:case 2:case 3:t="socket"===this.data.type?"#5ff":"#ff5";break;default:console.error("unexpected state",this.bindingState)}e="socket"===this.data.type?.1:.08;const s=360/this.system.data.rotationIncrement;this.debugVisual.setAttribute("radius",e),this.debugVisual.setAttribute("height",.05),this.debugVisual.setAttribute("segments-height",1),this.debugVisual.setAttribute("segments-radial",s),this.debugVisual.setAttribute("polygon-wireframe",{color:t,onTop:!0})},updateWorldSpaceObject(){const t=this.worldSpaceObject;t.matrix.identity(),t.matrix.decompose(t.position,t.quaternion,t.scale),this.el.object3D.add(t),this.el.sceneEl.object3D.attach(t)},addToSystem(){this.isSocket?this.system.addFreeSocket(this.worldSpaceObject):this.system.addFreePlug(this.worldSpaceObject)},removeFromSystem(){this.isSocket?this.system.removeFreeSocket(this.worldSpaceObject):this.system.removeFreePlug(this.worldSpaceObject)},getInertia(){const t=this.el.parentEl.components["dynamic-snap"];return t?.diverged?.1:1},suggestPeer(t){this.bindingState=1,this.peer=t,t.el.components.socket.trackPeer(this.el.object3D),this.el.emit("binding-request")},trackPeer(t){this.bindingState=3,this.peer=t},untrackPeer(t){this.bindingState=0,this.peer=null},cancelPeer(){this.peer&&(1===this.bindingState||2===this.bindingState?this.el.emit("binding-cancel"):3===this.bindingState&&this.peer.el.emit("binding-cancel"),this.peer.el.components.socket.untrackPeer(),this.untrackPeer()),this.bindingState=0},bindingFailed(){this.bindingState=3,this.cancelPeer()},bindingSuccess(){if(!this.peer)return;this.bindingState=2,this.removeFromSystem();const t=this.peer.el.components.socket;t.removeFromSystem(),this.system.data.debug&&(this.updateWorldSpaceObject(),t.updateWorldSpaceObject(),this.debugDistanceVector.subVectors(this.worldSpaceObject.position,this.peer.el.components.socket.worldSpaceObject.position),console.log("Binding Success: socket distance:",this.debugDistanceVector.length().toFixed(10)),Math.abs(this.debugDistanceVector.length())>.001&&(console.error("Inaccurate binding"),console.log("This position:",this.worldSpaceObject.position),console.log("Peer position:",this.peer.el.components.socket.worldSpaceObject.position)))},bindingBroken(){this.peer&&(this.addToSystem(),this.peer.el.components.socket.addToSystem(),this.cancelPeer())},tick(){this.updateWorldSpaceObject(),this.updateDebugVisual()}}),AFRAME.registerComponent("socket-fabric",{schema:{snap:{type:"string",oneOf:["auto","events"],default:"auto"}},init(){this.bindingRequest=this.bindingRequest.bind(this),this.el.addEventListener("binding-request",this.bindingRequest),this.bindingCancel=this.bindingCancel.bind(this),this.el.addEventListener("binding-cancel",this.bindingCancel),this.breakBonds=this.breakBonds.bind(this),this.el.addEventListener("mouseGrab",this.breakBonds),this.requests=[],this.prevRequestsLength=0,this.adjustmentVector=new THREE.Vector3,this.transform=new THREE.Object3D,this.eventData={worldTransform:this.transform}},bindingRequest(t){source=t.target,sourceNode=source.components.socket,target=sourceNode.peer,this.requests.includes(sourceNode)||this.requests.push(sourceNode)},bindingCancel(t){source=t.target,sourceNode=source.components.socket,this.disposeOfRequest(sourceNode,!1)},computeFabricAdjustmentTransforms(){this.requests.forEach((t=>{const e=t.fabricAdjustmentTransform,s=t.adjustmentTransform;e.scale.set(1,1,1),console.log("Socket adjustment transform: position: ",s.position),console.log("Socket adjustment transform: quaternion: ",s.quaternion),e.quaternion.copy(s.quaternion);const i=t.el.object3D.position,n=e.position;n.copy(s.position),this.adjustmentVector.copy(i),this.adjustmentVector.applyQuaternion(e.quaternion),n.sub(this.adjustmentVector),n.add(i),console.log("World Space Fabric adjustment transform: position: ",e.position),console.log("World Space Fabric adjustment transform: quaternion: ",e.quaternion)}))},buildConsensus(){const t=t=>this.requests.filter((e=>this.compareTransforms(t.fabricAdjustmentTransform,e.fabricAdjustmentTransform))).length,e=this.requests.map((e=>t(e))),s=Math.max(...e),i=e.indexOf(s),n=this.requests[i],o=this.requests.filter((t=>!this.compareTransforms(n.fabricAdjustmentTransform,t.fabricAdjustmentTransform)));o.forEach((t=>{this.disposeOfRequest(t,!0)})),this.requests.length||console.error("All requests disposed of:",o)},disposeOfRequest(t,e){e&&t.el.emit("binding-failed");const s=this.requests.indexOf(t);this.requests.splice(s,1)},compareTransforms(t,e,s=6){if(t===e)return!0;const i=(t,e)=>Math.abs(t-e)<Math.pow(10,-s),n=t.position,o=e.position;if(!i(n.x,o.x))return!1;if(!i(n.y,o.y))return!1;if(!i(n.z,o.z))return!1;const r=t.quaternion,a=e.quaternion;return!!(i(r.x,a.x)&&i(r.y,a.y)&&i(r.z,a.z)&&i(r.w,a.w))},tick(){this.requests.length?(this.computeFabricAdjustmentTransforms(),this.buildConsensus(),this.moveTowards(this.requests[0].fabricAdjustmentTransform)):this.prevRequestsLength&&this.el.emit("snapEnd"),this.prevRequestsLength=this.requests.length},moveTowards(t){if("auto"===this.data.snap){const e=this.el.sceneEl.object3D,s=this.el.object3D.parent;e.attach(this.el.object3D),this.el.object3D.position.add(t.position),this.el.object3D.quaternion.premultiply(t.quaternion),s.attach(this.el.object3D),this.requests.forEach((t=>{this.requestCompleted(t)}))}else{const e=this.transform;e.position.copy(this.el.object3D.position),e.quaternion.copy(this.el.object3D.quaternion),e.scale.copy(this.el.object3D.scale),this.el.object3D.parent.add(e),this.el.sceneEl.object3D.attach(e),e.quaternion.premultiply(t.quaternion),e.position.add(t.position),console.log("Local transform: position: ",e.position),console.log("Local transform: quaternion: ",e.quaternion),this.el.emit("snapStart",this.eventData),this.el.addEventListener("snapped-to-position",(()=>{this.requests.forEach((t=>{this.requestCompleted(t)}))}))}},requestCompleted(t){t.el.emit("binding-success"),this.disposeOfRequest(t,!1)},breakBonds(){this.el.querySelectorAll("[socket]").forEach((t=>{t.components.socket.bindingBroken()}))}}),AFRAME.registerComponent("plug",{init(){this.el.setAttribute("socket",{type:"plug"})}})})();