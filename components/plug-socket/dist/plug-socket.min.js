(()=>{var t={12:()=>{AFRAME.registerComponent("polygon-wireframe",{schema:{color:{type:"color",default:"grey"},dashed:{type:"boolean",default:!1},dashSize:{type:"number",default:3},gapSize:{type:"number",default:1},dashScale:{type:"number",default:30}},init(){const t=this.el.getObject3D("mesh").geometry;t||console.warn("polygon-wireframe: no base geometry found");const e=new THREE.EdgesGeometry(t);var s;s=this.data.dashed?new THREE.LineDashedMaterial({color:this.data.color,dashSize:this.data.dashSize,gapSize:this.data.gapSize,scale:this.data.dashScale}):new THREE.LineBasicMaterial({color:this.data.color});const i=new THREE.LineSegments(e,s);i.computeLineDistances(),this.el.object3D.add(i),this.el.getObject3D("mesh").visible=!1}})}},e={};function s(i){var n=e[i];if(void 0!==n)return n.exports;var o=e[i]={exports:{}};return t[i](o,o.exports,s),o.exports}s(12),AFRAME.registerSystem("socket",{schema:{snapDistance:{default:.1},snapRotation:{default:30},rotationIncrement:{default:90},debug:{default:!1}},init(){this.freeSocketObjects=[],this.freePlugObjects=[],this.freeSocketsSortedByX=[],this.freeSocketsSortedByY=[],this.freeSocketsSortedByZ=[],this.upVector=new THREE.Vector3(0,1,0),this.identityQuaternion=new THREE.Quaternion,this.bestQuaternion=new THREE.Quaternion,this.testPlug=new THREE.Object3D},update(){this.angleIncrementQuaternion=new THREE.Quaternion,this.angleIncrementQuaternion.setFromAxisAngle(this.upVector,THREE.MathUtils.degToRad(this.data.rotationIncrement))},addFreePlug(t){this.freePlugObjects.push(t)},removeFreePlug(t){const e=this.freePlugObjects.indexOf(t);e>0&&this.freePlugObjects.splice(e,1)},addFreeSocket(t){this.freeSocketObjects.push(t)},removeFreeSocket(t){const e=this.freeSocketObjects.indexOf(t);e>0&&this.freeSocketObjects.splice(e,1)},prepareSocketsForSearch(){this.freeSocketsSortedByX=[...this.freeSocketObjects].sort(((t,e)=>t.position.x-e.position.x)),this.freeSocketsSortedByY=[...this.freeSocketObjects].sort(((t,e)=>t.position.y-e.position.y)),this.freeSocketsSortedByZ=[...this.freeSocketObjects].sort(((t,e)=>t.position.z-e.position.z))},findNearbySockets(t){const e=this.data.snapDistance,s=t.position,i=this.findCandidates(this.freeSocketsSortedByX,"x",s.x,e),n=this.findCandidates(this.freeSocketsSortedByY,"y",s.y,e),o=this.findCandidates(this.freeSocketsSortedByZ,"z",s.z,e),a=(t,e)=>t.filter((t=>e.find((e=>t===e)))),r=a(i,n),c=a(r,o),h=e*e;return c.filter((t=>!(t.position.distanceToSquared(s)>=h)))},findCandidates(t,e,s,i){if(0===t.length)return t;const n=this.findInArraySegment(t,e,s-i,0,t.length-1,!0),o=this.findInArraySegment(t,e,s+i,0,t.length-1,!1);return t.slice(n,o+1)},findInArraySegment(t,e,s,i,n,o){if(i===n||i>n)return t[i].position[e]>s&&o?i-1:i;const a=Math.floor((i+n)/2),r=t[a].position[e];return r>s||r===s&&o?this.findInArraySegment(t,e,s,i,a-1):this.findInArraySegment(t,e,s,a+1,n)},tick(){this.prepareSocketsForSearch();const t=this.freePlugObjects,e=t.length;for(ii=0;ii<e;ii++){const e=t[ii],s=e.el.components.socket;adjustmentObject=s.adjustmentObject;const i=this.matchPlugToSocket(e,adjustmentObject);if(!i)continue;const n=i.el.components.socket,o=n.getIntertia();s.getIntertia()<=o?s.suggestPeer(i):n.suggestPeer(e)}},matchPlugToSocket(t,e){let s=null,i=1/0;const n=this.findNearbySockets(t);if(!(n.length<1))return n.forEach((n=>{this.testPlug.matrix.identity(),this.testPlug.matrix.decompose(this.testPlug.position,this.testPlug.quaternion,this.testPlug.scale),n.add(this.testPlug),t.attach(this.testPlug);let o=1/0;for(ii=0;ii<360;ii+=this.data.rotationIncrement){const t=t=>t-2*Math.PI*Math.floor((t+Math.PI)/(2*Math.PI)),e=this.testPlug.quaternion.angleTo(this.identityQuaternion),s=Math.abs(t(e));s<o&&(o=s,this.bestQuaternion.copy(this.testPlug.quaternion)),this.testPlug.quaternion.multiply(this.angleIncrementQuaternion)}if(o<this.data.snapRotation){const t=this.testPlug.position.lengthSq();t<i&&(i=t,s=n,e.position.copy(this.testPlug.position),e.quaternion.copy(this.bestQuaternion))}})),s}}),AFRAME.registerComponent("socket",{schema:{type:{type:"string",default:"socket",oneOf:["socket","plug"]}},init(){this.bindingState=0,this.adjustmentObject=new THREE.Object3D,this.peer=null,this.isSocket="socket"===this.data.type,this.worldSpaceObject=new THREE.Object3D,this.worldSpaceObject.el=this.el,this.updateWorldSpaceObject(),this.addToSystem(),this.bindingFailed=this.bindingFailed.bind(this),this.bindingSuccess=this.bindingSuccess.bind(this),this.el.addEventListener("binding-failed",this.bindingFailed),this.el.addEventListener("binding-success",this.bindingSuccess),this.system.data.debug&&(this.debugVisual=document.createElement("a-cylinder"),this.updateDebugVisual(),this.el.appendChild(this.debugVisual))},updateDebugVisual(){if(!this.debugVisual)return;let t,e;switch(this.bindingState){case 0:t="socket"===this.data.type?"#55f":"#f55";break;case 1:t="socket"===this.data.type?"#5af":"#fa5";break;case 2:t="socket"===this.data.type?"#5ff":"#ff5";break;default:console.error("unexpected state",this.bindingState)}e="socket"===this.data.type?.1:.08;const s=360/this.system.data.rotationIncrement;this.debugVisual.setAttribute("radius",e),this.debugVisual.setAttribute("height",.05),this.debugVisual.setAttribute("segments-height",1),this.debugVisual.setAttribute("segments-radial",s),this.debugVisual.setAttribute("polygon-wireframe",{color:t});const i=this.debugVisual.getObject3D("mesh");i&&(i.material.depthWrite=!1,i.material.depthTest=!1,i.material.toneMapped=!1,i.material.transparent=!0)},updateWorldSpaceObject(){const t=this.worldSpaceObject;t.matrix.identity(),t.matrix.decompose(t.position,t.quaternion,t.scale),this.el.object3D.add(t),this.el.sceneEl.object3D.attach(t)},addToSystem(){this.isSocket?this.system.addFreeSocket(this.worldSpaceObject):this.system.addFreePlug(this.worldSpaceObject)},removeFromSystem(){this.isSocket?this.system.removeFreeSocket(this.worldSpaceObject):this.system.removeFreePlug(this.worldSpaceObject)},getIntertia:()=>1,suggestPeer(t){this.removeFromSystem(this.el.object3D),this.bindingState=1,this.peer=t,this.el.emit("binding-request")},bindingFailed(){this.addToSystem(),this.peer.el.components.socket.addToSystem(),this.connectedSocket=null},bindingSuccess(){this.bindingState=2},tick(){if(this.updateWorldSpaceObject(),this.updateDebugVisual(),1===this.bindingState){const t=this.el.object3D,e=this.peer;this.adjustmentObject.matrix.identity(),this.adjustmentObject.matrix.decompose(this.adjustmentObject.position,this.adjustmentObject.quaternion,this.adjustmentObject.scale),t.add(this.adjustmentObject),e.attach(this.adjustmentObject),this.el.emit("binding-request")}}}),AFRAME.registerComponent("socket-fabric",{init(){this.bindingRequest=this.bindingRequest.bind(this),this.el.addEventListener("binding-request",this.bindingRequest),this.requests=[]},bindingRequest(t){source=t.target,sourceNode=source.components.socket,target=sourceNode.peer,this.requests.push(sourceNode)},buildConsensus(){const t=t=>this.requests.filter((e=>this.compareTransforms(t.adjustmentObject,e.adjustmentObject))).length,e=this.requests.map((e=>t(e))),s=Math.max(...e),i=e.indexOf(s),n=this.requests[i];this.requests.filter((t=>!this.compareTransforms(n.adjustmentObject,t.adjustmentObject))).forEach((t=>{this.disposeOfRequest(t,!0)}))},disposeOfRequest(t,e){e&&t.el.emit("binding-failed");const s=this.requests.indexOf(t);this.requests.splice(s,1)},compareTransforms(t,e,s=6){const i=(t,e)=>Math.abs(t-e)<Math.pow(10,-s),n=t.position,o=e.position;if(!i(n.x,o.x))return!1;if(!i(n.y,o.y))return!1;if(!i(n.z,o.z))return!1;const a=t.quaternion,r=e.quaternion;return!!(i(a.x,r.x)&&i(a.y,r.y)&&i(a.z,r.z)&&i(a.w,r.w))},tick(){this.requests.length&&(this.buildConsensus(),this.moveTowards(this.requests[0].adjustmentObject))},moveTowards(t){this.el.object3D.position.add(t.position),this.el.object3D.quaternion.multiply(t.quaternion),this.requests.forEach((t=>{this.requestCompleted(t)}))},requestCompleted(t){t.el.emit("binding-success"),this.disposeOfRequest(t,!1)}}),AFRAME.registerComponent("plug",{init(){this.el.setAttribute("socket",{type:"plug"})}})})();