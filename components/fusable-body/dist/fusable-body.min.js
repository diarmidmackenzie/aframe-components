(()=>{var t={527:()=>{AFRAME.registerComponent("object-parent",{schema:{parent:{type:"selector"}},update(){document.querySelectorAll(`#${parent.id}`).length>1&&console.warn(`object-parent matches duplicate entities for new parent ${parent.id}`);const t=this.data.parent.object3D;this.reparent(t)},remove(){const t=this.el.parentEl;this.reparent(t.object3D)},reparent(t){const e=this.el.object3D,n=e.parent;e.parent!==t&&(objectEl=t=>"Scene"===t.type?this.el.sceneEl:t.el,console.log(`Reparenting ${e.el.id} from ${objectEl(n).id} to ${objectEl(t).id}`),t.attach(e))}})},592:()=>{AFRAME.registerComponent("raycast-target",{schema:{type:"selector"},init(){this.target=this.data?this.data:this.el}})}},e={};function n(o){var i=e[o];if(void 0!==i)return i.exports;var s=e[o]={exports:{}};return t[o](s,s.exports,n),s.exports}AFRAME.components["object-parent"]||n(527),AFRAME.components["raycast-target"]||n(592),AFRAME.registerSystem("fusable-body",{init(){this.nodeMap={},this.componentsJoined=this.componentsJoined.bind(this),this.componentsSplit=this.componentsSplit.bind(this),this.el.addEventListener("graph-components-joined",this.componentsJoined),this.el.addEventListener("graph-components-split",this.componentsSplit),this.containers={}},getNodePhysicsType:t=>t.components["fusable-body"].data.type,addNode(t){this.nodeMap[t.object3D.uuid]=t;const e=this.getNodePhysicsType(t),n=`#${this.createContainer(t,e).id}`;t.setAttribute("object-parent",{parent:n}),t.setAttribute("raycast-target",n)},createContainer(t,e){const n=document.createElement("a-entity");return n.id=THREE.MathUtils.generateUUID(),t.object3D.add(n.object3D),this.el.object3D.attach(n.object3D),n.setAttribute("physx-body",{type:e}),this.el.appendChild(n),n},destroyContainer(t){t.parentEl.removeNode(t)},removeNode(t){t.removeAttribute("object-parent"),t.parentContainer=null,delete nodeMap[t.object3D.uuid]},componentsJoined(t){let e,n;component1=t.detail.thisComponent,component2=t.detail.otherComponent,component1.length>=component2.length?(e=component2,n=component1):(e=component1,n=component2);const o=this.nodeMap[e[0]].object3D.parent.el,i=this.nodeMap[n[0]].object3D.parent.el.id;e.forEach((t=>{const e=this.nodeMap[t],n=`#${i}`;e.setAttribute("object-parent",{parent:n}),e.setAttribute("raycast-target",n)})),this.destroyContainer(o)},componentsSplit(t){let e;component1=t.detail.thisComponent,component2=t.detail.otherComponent,e=component1.length>=component2.length?component2:component1;const n=`#${this.createContainer("kinematic").id}`;e.forEach((t=>{const e=this.nodeMap[t];e.setAttribute("object-parent",{parent:n}),e.setAttribute("raycast-target",n)}))}}),AFRAME.registerComponent("fusable-body",{schema:{type:{type:"string",default:"dynamic"}},init(){this.el.setAttribute("graph-node"),this.system.addNode(this.el)},remove(){this.el.removeAttribute("graph-node"),this.system.removeNode(this.el)}}),AFRAME.registerComponent("fused-joint",{multiple:!0,schema(){},init(){this.el.setAttibute(`graph-edge__${this.attrName}`)},remove(){this.el.removeAttibute(`graph-edge__${this.attrName}`)}})})();